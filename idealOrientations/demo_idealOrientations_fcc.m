%% Demonstration description:
% This script demonstrates how to plot user-defined pole figures and 
% orientation distribution function sections of common ideal orientations 
% for fcc materials.
%
%% Author:
% Dr. Azdiar Gazder, 2023, azdiaratuowdotedudotau
%
%% Syntax:
%  demo_idealOrientations_fcc
%
%% Input:
%  none
%
%% Output:
%  none
%
%% Options:
%  none
%%


%% Initialise Mtex
close all; clc; clear all; clear hidden;
startup_mtex

%% Define specimen directions
% The definition of the commmon orientations and fibres is based on the 
% following fixed specimen coordinate system of sample directions
% parallel to the crystallographic directions:
RD = xvector; TD = yvector; ND = zvector;


%% Define the Mtex plotting convention
setInterp2Latex;
setMTEXpref('xAxisDirection','north');
setMTEXpref('zAxisDirection','intoPlane');
setMTEXpref('FontSize',20);
setMTEXpref('FontWeight','bold');
pfAnnotations = @(varargin) text([-vector3d.X,vector3d.Y],{'RD','TD'},...
  'BackgroundColor','w','tag','axesLabels',varargin{:});
setMTEXpref('pfAnnotations',pfAnnotations);


%% Define the crystal and specimen symmetry
CS = crystalSymmetry('SpaceId',225);
SS = specimenSymmetry('triclinic');


%% Define pole figures and ODF sections 
h = Miller({1,1,1},{2,0,0},{2,2,0},CS);
phi2Sections = [0,45,65].*degree;


%% Common ideal orientations for fcc materials:
% % Cube-RD (C_RD):        phi1 = 22; PHI = 0;  phi2 = 0;
% % Cube-ND (C_ND):        phi1 = 0;  PHI = 22; phi2 = 0;
% % Cube (C):              phi1 = 45; PHI = 0;  phi2 = 45;
% % Cube Twin (CT):        phi1 = 27; PHI = 48; phi2 = 27;
% % Rotated Cube (RtC):    phi1 = 0;  PHI = 0;  phi2 = 45;
% % Goss Twin (GT):        phi1 = 90; PHI = 25; phi2 = 45;
% % Rotated Copper (RtCu): phi1 = 0;  PHI = 35; phi2 = 45;
% % Copper (Cu):           phi1 = 90; PHI = 35; phi2 = 45;
% % E:                     phi1 = 0;  PHI = 55; phi2 = 45;
% % F:                     phi1 = 30; PHI = 55; phi2 = 45;
% % Rotated Goss (RtG):    phi1 = 0;  PHI = 90; phi2 = 45;
% % A:                     phi1 = 35; PHI = 90; phi2 = 45;
% % Goss-Brass (GBr):      phi1 = 74; PHI = 90; phi2 = 45;
% % Brass (Br):            phi1 = 55; PHI = 90; phi2 = 45;
% % Goss (G):              phi1 = 90; PHI = 90; phi2 = 45;
% % Copper Twin (CuT):     phi1 = 90; PHI = 74; phi2 = 45;
% % S:                     phi1 = 59; PHI = 37; phi2 = 63;

ori = orientation.byEuler(...
    [22, 0, 0;...
    0, 22, 0;...
    45, 0, 45;...
    27, 48, 27;...
    0, 0, 45;...
    90, 25, 45;...
    0, 35, 45;...
    90, 35, 45;...
    0, 55, 45;...
    30 55, 45;...
    0, 90, 45;...
    35, 90, 45;...
    74, 90, 45;...
    55, 90, 45;...
    90, 90, 45;...
    90, 74, 45;...
    59, 37, 63].*degree,...
    CS,SS);

oriName = {'C-RD',...
    'C-ND',...
    'C',...
    'CT',...
    'RtC',...
    'GT',...
    'RtCu',...
    'Cu',...
    'E',...
    'F',...
    'RtG',...
    'A',...
    'GBr',...
    'Br',...
    'G',...
    'CuT',...
    'S'};
%%


%% Define the marker list (17)
markerList = {'o',...
'+',...
'*',...	
'square',...	
'diamond',...	
'^',...	
'v',...
'>',...	
'<',...	
'pentagram',...
'hexagram',...
'.'	,...
'x',...
'_',...	
'|',...
'o',...
'+'};


%% Define the color list using a colormap
colorList = jet(length(markerList));

%% Define pole figures and ODF section options
pfOptions = {'MarkerEdgeColor','black','MarkerSize',20};
odfOptions = {'phi2',phi2Sections,'add2all','MarkerEdgeColor','black','maxphi1',pi/2,'MarkerSize',20};

%% Plot the pole figures and ODF sections
for ii = 1:length(ori)
figure(1)
plotPDF(ori(ii),h,'antipodal','MarkerColor',[colorList(ii,:)],'Marker',markerList{ii},pfOptions{:},'DisplayName',oriName{ii});
hold all;

figure(2)
plotSection(ori(ii),'MarkerColor',[colorList(ii,:)],'Marker',markerList{ii}, odfOptions{:},'DisplayName',oriName{ii});
hold all; 

end
figure(1); legend('Location','best');
figure(2); legend('Location','best');
figure(1); hold off;
figure(2); hold off;
setInterp2Tex;
